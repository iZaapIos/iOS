{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Arial-Black;\f2\fnil\fcharset0 Menlo-Bold;
\f3\froman\fcharset0 TimesNewRomanPSMT;\f4\fnil\fcharset0 Georgia;\f5\fnil\fcharset0 Monaco;
\f6\fswiss\fcharset0 Helvetica-Light;\f7\fmodern\fcharset0 Courier-Bold;\f8\fmodern\fcharset0 Courier;
\f9\fnil\fcharset0 HelveticaNeue;\f10\froman\fcharset0 Times-Roman;\f11\fswiss\fcharset0 ArialMT;
\f12\fnil\fcharset0 Menlo-Regular;\f13\fnil\fcharset0 Verdana;\f14\fnil\fcharset204 PTSans-Regular;
\f15\fnil\fcharset0 PTSerif-Regular;\f16\fnil\fcharset0 HelveticaNeue-Light;}
{\colortbl;\red255\green255\blue255;\red11\green87\blue42;\red49\green49\blue49;\red252\green110\blue8;
\red14\green0\blue0;\red247\green247\blue247;\red2\green26\blue0;\red147\green0\blue125;\red175\green8\blue21;
\red25\green0\blue208;\red52\green52\blue52;\red28\green97\blue137;\red38\green38\blue38;\red26\green27\blue29;
\red0\green0\blue120;\red234\green234\blue234;\red37\green127\blue159;\red109\green109\blue109;\red43\green39\blue19;
\red19\green20\blue21;\red252\green252\blue252;\red37\green37\blue37;\red237\green237\blue237;\red107\green0\blue1;
\red50\green50\blue50;\red26\green26\blue26;\red29\green29\blue29;\red196\green26\blue22;\red246\green246\blue246;
\red240\green115\blue25;\red31\green31\blue31;\red254\green254\blue254;\red170\green13\blue145;\red63\green110\blue116;
\red92\green38\blue153;\red46\green13\blue110;\red41\green41\blue41;\red25\green25\blue25;\red74\green74\blue74;
\red67\green67\blue67;\red27\green29\blue31;\red235\green236\blue237;\red219\green219\blue219;\red83\green83\blue83;
\red247\green238\blue241;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww14340\viewh7380\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0  rrb: http://www.result24.co.in/rrb-recruitment.html#4\
bg4100: DoRa%@))AcK\
tp link: IzAaP*)@TiK\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \ul \ulc0 table view controller\ulnone \
\
1.select the custom class in table view controller..\
2.also select the custom class for table view cell in identity inspector.\
3.couldn\'92t create the IBOutlet for the UIobjects directly bcz\'85it shows that couldn\'92t find the desired custom class..dis mean u ve to select the class curtly in the inspectors window.\
4.to overcome dis do it by manually\'85.by simply type the code to outlet  and drag the outlets to storyboard(reuse identifier rytclick select the outlets name)\
5.In dequeuereusablecell segment of code\'85while calling the outlet here..v ve to define the tableviewcell name lyk( \'93as! UItableviewCell name \'93) and also change the reusable identifier name..as v defined..\
\
\
\ul textfield delegates\
\ulnone \
1.before using textfield delegates\'85v ve to define (UITextFieldDelegate) in the class of view controller.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f1\b \cf0 \ul 2.any functions should be declared or used below the warning() func\
3.IB outlets are called immediate after of the class.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b0 \cf0 \ulnone 4.have to set the delegate for the textfield\'85by rytclick n drag the delegate to the view controller.\
5.to display the keyboard\'85press cmd+K\
6.button actions also defined below the warning func().\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 \ul TextView Delegates
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 \ulnone \
1.objective c to swift\'85(dat i done)\
2.clrs should declared as UIColor.greenColor()\'85\'85v should use brackets\'85lyk func ()\
3.while declaring in IBOutlet using ?\'97means values can be optional lyk empty or not\'85\'85!\'97means can\'92t b empty\'97 shows error..\
4.while using textview it shows thread\'85
\b \ul which unable to rectify..ve to check\'85 (corrected) got output\

\b0 \ulnone 5.If the error is (
\f2\b\fs22 \CocoaLigature0 BSMachError: (os/kern) invalid capability (20))
\f3\fs24 lyk dis means v ve to clear the build data in the derived data.\

\f0\b0 \CocoaLigature1 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 \ul scroll view delegates
\b0 \
\
1.\ulnone  while using autoresizing method v can\'92t use bitwise AND operator  \'94 | \'94\'85instead v can use dis syntax..\
 
\b  scrollview.autoresizing=[.Flexiblewidth , .Flexibleheight]\
2.
\b0 wire up  means jus dragging\'85here attaching the scrollview ,delegate to the view controller means jus simply dragging the both from one to one.\
3.playground is an option used\'85which shows the output for the syntax without loading while doing the coding..(excludes storyboard)(v can check the piece of code)\
4.we can check whether the delegate and  the views attached or not ..by simply right clicking the controller name in the view hierarchy sec of Xcode\'85\
\
digisol: SsID%@%Wpa2AES\
airtel2:AeS^)))*(TkIp\
airtel: AiRtEl%@))IsP\
\

\b \ul collection view Delegates\ulnone \
\
1.important terms (i)UIcollectionView  (ii)UIcollectionViewlayout \
(iii)UIcollectionViewflowlayout\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0 \cf0 2.its nothing but contents or images that are arranged in a grid lyk manner..\
3.various layers of collection views are (v can use lyk dis instead of using a collection view controller by using a table view controller)\
 (i) collection view cell over collection view\
 (ii)collection view fit into a single row of a table view\
 (iii) then it fit into the table view controller\'85\
4.here also v ve to use reuse identifier \'93unit\'94 lyk in  table view bcoz here the single cell ll b duplicate for others while running..\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b \cf0 \ul working difference between the swift version 1 and 2:  \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://www.raywenderlich.com/108522/whats-new-in-swift-2"}}{\fldrslt \cf0 http://www.raywenderlich.com/108522/whats-new-in-swift-2}}   ,\
 {\field{\*\fldinst{HYPERLINK "https://www.hackingwithswift.com/swift2"}}{\fldrslt https://www.hackingwithswift.com/swift2}} ,\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/RevisionHistory.html"}}{\fldrslt \cf0 https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/RevisionHistory.html}}\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\b0 \cf0 \ulnone new D-Link : %Fortress123&!@#\
dlink: FlOoD^)))*(VaLa
\b \ul \
\

\b0 \ulnone 1. various versions of swift\
 (i) version 1.0\
 (ii) version 2.0 and series..now using swift 2.1\
\
2.The new Xcode 7.1( swift 2.1) able to embed file,image,color into our playground..\
3.In objective c and pre-swift uses NSerror for handling errors..in swift 2.0 the keywords do,try,catch,throw for error handling.\
4. \expnd0\expndtw0\kerning0
instead of \cf2 \expnd0\expndtw0\kerning0
try\cf0 \expnd0\expndtw0\kerning0
 blocks ,code that can throw an error in a \cf2 \expnd0\expndtw0\kerning0
do\cf0 \expnd0\expndtw0\kerning0
 block,Then, you add the \cf2 \expnd0\expndtw0\kerning0
try\cf0 \expnd0\expndtw0\kerning0
 keyword to each function call that could throw an error.\
5.
\f4 \cf3 \expnd0\expndtw0\kerning0
Unlike an 
\f5 \cf4 \expnd0\expndtw0\kerning0
if
\f4 \cf3 \expnd0\expndtw0\kerning0
 statement, 
\f5 \cf4 \expnd0\expndtw0\kerning0
guard
\f4 \cf3 \expnd0\expndtw0\kerning0
 statements only run if the conditions are 
\i \expnd0\expndtw0\kerning0
not
\i0 \expnd0\expndtw0\kerning0
 met. 
\f0 \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\sl264\slmult1\pardirnatural

\b \cf0 6.
\b0\fs32 \expnd0\expndtw0\kerning0
.(differ in protocol extension)
\f6\fs24 \expnd0\expndtw0\kerning0
In Swift 1, protocols were like interfaces to specify a set of properties and methods that a class, struct, or enum would then conform to.\
\pard\pardeftab720\sl264\slmult1
\cf0 \expnd0\expndtw0\kerning0
Now in Swift 2, you can extend protocols and add default implementations for properties and methods. You can already do this with classes and structs \'97 adding new methods to\cf2 \expnd0\expndtw0\kerning0
String\cf0 \expnd0\expndtw0\kerning0
 or \cf2 \expnd0\expndtw0\kerning0
Array\cf0 \expnd0\expndtw0\kerning0
, for example \'97 but adding these to protocols now gives you a much wider reach.\
     for eg:
\f7\b\fs26 \cf5 \cb6 \expnd0\expndtw0\kerning0
extension
\f8\b0\fs24  CustomStringConvertible \cf7 \expnd0\expndtw0\kerning0
\{\cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl300
\cf5 \expnd0\expndtw0\kerning0
  \cf8 \expnd0\expndtw0\kerning0
var\cf5 \expnd0\expndtw0\kerning0
 shoutyDescription\cf7 \expnd0\expndtw0\kerning0
:\cf5 \expnd0\expndtw0\kerning0
 \cf8 \expnd0\expndtw0\kerning0
String\cf5 \expnd0\expndtw0\kerning0
 \cf7 \expnd0\expndtw0\kerning0
\{\cf5 \expnd0\expndtw0\kerning0
\
    \cf8 \expnd0\expndtw0\kerning0
return\cf5 \expnd0\expndtw0\kerning0
 \cf9 \expnd0\expndtw0\kerning0
"\cf10 \expnd0\expndtw0\kerning0
\\(\cf9 \expnd0\expndtw0\kerning0
self.description.uppercaseString)!!!"\
\cf5 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl264\slmult1

\f6 \cf0 \cb1 \expnd0\expndtw0\kerning0
7.do-while loop is changed into repeat-while loop..does the same work..on\
\
\pard\pardeftab720\sl264\slmult1

\f0\b \cf0 \expnd0\expndtw0\kerning0
\ul Players using in the iOS development;\
\

\b0 \ulnone 1.AVplayer:  {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/library/ios/documentation/AVFoundation/Reference/AVPlayer_Class/#//apple_ref/doc/uid/TP40009530-CH1-SW11"}}{\fldrslt https://developer.apple.com/library/ios/documentation/AVFoundation/Reference/AVPlayer_Class/#//apple_ref/doc/uid/TP40009530-CH1-SW11}}\
2.
\f9 \cf11 \expnd0\expndtw0\kerning0
You have 2 options for playing video in iOS \'96 {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/library/ios/#documentation/mediaplayer/reference/MPMoviePlayerController_Class/Reference/Reference.html"}}{\fldrslt \cf12 \expnd0\expndtw0\kerning0
MPMoviePlayerController}} and {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/library/mac/#documentation/AVFoundation/Reference/AVPlayer_Class/Reference/Reference.html"}}{\fldrslt \cf12 \expnd0\expndtw0\kerning0
AVPlayer}}. 
\f0 \cf0 \expnd0\expndtw0\kerning0
\
3.
\f9\fs36 \cf11 \expnd0\expndtw0\kerning0
 
\fs24 \expnd0\expndtw0\kerning0
you need to play multiple videos at once, you can use the {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/library/mac/#documentation/AVFoundation/Reference/AVPlayer_Class/Reference/Reference.html"}}{\fldrslt \cf12 \expnd0\expndtw0\kerning0
AVPlayer}}.\
4.MPmovieplayer is removed in iOS 9.0\
5. 
\b \expnd0\expndtw0\kerning0
\ul Third party players\

\b0 \expnd0\expndtw0\kerning0
\ulnone ->video player-same as movie player ..used in place mpmovieplayer\
->Music Player\
->Audio Player-AVaudio player\
->Media Player-is work same as MPmusicplayer(used in previous version iOS..not now)\
->Movie Player-it is used instead of MPmovieplayer\
->YouTube Player\
\
6.MPmovieplayer -plays video from the 1.URL 2.from local(inside proj) 3.from the mobile\
7.AVplayer also plays audio from URL and local.\
\

\b \expnd0\expndtw0\kerning0
\ul Web Views\

\b0 \expnd0\expndtw0\kerning0
\ulnone 1.
\f10\fs30 \cf13 \expnd0\expndtw0\kerning0
app is dependent on web content, there are a couple ways you can go about outputting that content. JSON Parsing and Web Views. \
2.u have to first define the web URL which u going to view lyk\
    let URL=\'93\'94\
\{ let requestURL=NSURL(String:URL(defined))\
 let request=NSURLRequest(URL:requestURL!)\
\}\
\

\b \ul Parsing\

\b0 \ulnone 1.
\f11\fs26 \cf14 \expnd0\expndtw0\kerning0
Parsing is the syntactic analysis part of the compilation process. I
\b t only determines if a specified input is valid or not
\b0 . (parsing is the process of assigning 
\i \expnd0\expndtw0\kerning0
names
\i0 \expnd0\expndtw0\kerning0
 to bits of input.).\
2.types of parser\
 ->json parser\
->xml parser             
\b =>
\b0 frequrent used parsers are (i)json parser (ii)xml parser.\
 ->html parser\
->csv parser\
->rss parser\
\

\b \expnd0\expndtw0\kerning0
\ul To load a image from the url:use dis code\
\pard\pardeftab720

\f12\b0 \cf15 \cb16 \expnd0\expndtw0\kerning0
\ulnone let\cf0 \expnd0\expndtw0\kerning0
 url = NSURL(\cf15 \expnd0\expndtw0\kerning0
string\cf0 \expnd0\expndtw0\kerning0
: image.url)\
\cf15 \expnd0\expndtw0\kerning0
let\cf0 \expnd0\expndtw0\kerning0
 data = \cf17 \expnd0\expndtw0\kerning0
NSData\cf0 \expnd0\expndtw0\kerning0
(contentsOfURL: url!) \cf18 \expnd0\expndtw0\kerning0
//make sure your image in this url does exist, otherwise unwrap in a if let check\cf0 \expnd0\expndtw0\kerning0
\
imageURL.image = \cf17 \expnd0\expndtw0\kerning0
UIImage\cf0 \expnd0\expndtw0\kerning0
(data: data!)\cf19 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl264\slmult1

\f11 \cf14 \cb1 \expnd0\expndtw0\kerning0
\
\

\b \expnd0\expndtw0\kerning0
\ul JSON Parsing
\b0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\pardeftab720\sl264\slmult1

\fs28 \cf14 \expnd0\expndtw0\kerning0
1.
\f10 \cf20 \cb21 \expnd0\expndtw0\kerning0
It\'92s commonly used for representing \ul structural data and data interchange\ulnone  in client-server applications, serving as an alternative to XML.\
2.Error on \'93CustomStringCovertible\'94\'85(may b caused due to swift version changes from 1.2 to 2).\
3.
\f9 \cf0 \cb1 \expnd0\expndtw0\kerning0
using NSURLSession and NSJSONSerialization directly to request JSON from the web service and parse it.\

\f10 \cf20 \cb21 \expnd0\expndtw0\kerning0
\
\
\

\b \expnd0\expndtw0\kerning0
\ul Array and Dictionaries\

\b0\fs26 \ulnone 1.values of same type.(array and dictionary)\
2.(i)array to a constant is immutable\'97(i.e.cant be change)\
   (ii)array to a variable is mutable- (i.e v can add or remove or change)\

\fs24 3. 
\f13 \cf0 \cb1 \expnd0\expndtw0\kerning0
Swift dictionaries are used to store
\b \expnd0\expndtw0\kerning0
 unordered lists of values
\b0 \expnd0\expndtw0\kerning0
 of the same type.(Swift dictionaries use unique identifier known as a 
\b \expnd0\expndtw0\kerning0
key
\b0 \expnd0\expndtw0\kerning0
 to store a value).
\f6 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl440

\f12 \cf22 \cb23 \expnd0\expndtw0\kerning0
\ul \ulc22 dictionary declaration:\ulnone \
var someDict:[Int:String] = [1:"One", 2:"Two", 3:"Three"]\
\pard\pardeftab720\sl264\slmult1

\f6 \cf0 \cb1 \expnd0\expndtw0\kerning0
                               |->type of the key\
4.
\f13 \expnd0\expndtw0\kerning0
You can use 
\b \expnd0\expndtw0\kerning0
updateValue(forKey:)
\b0 \expnd0\expndtw0\kerning0
 method to add an existing value a given key of the dictionary.\
5.iterating over an array or dictionary means..using (for in)..(enumerate)\
6.thn other properties in dat are..(i)count (ii)isempty-returns bool value.\
\expnd0\expndtw0\kerning0
\ul \

\b \expnd0\expndtw0\kerning0
NSDictionary to json
\b0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\pardeftab720

\f12\fs26 \cf15 \cb16 \expnd0\expndtw0\kerning0
let\cf0 \expnd0\expndtw0\kerning0
 dictionary = [\cf24 \expnd0\expndtw0\kerning0
"aKey"\cf0 \expnd0\expndtw0\kerning0
: \cf24 \expnd0\expndtw0\kerning0
"aValue"\cf0 \expnd0\expndtw0\kerning0
, \cf24 \expnd0\expndtw0\kerning0
"anotherKey"\cf0 \expnd0\expndtw0\kerning0
: \cf24 \expnd0\expndtw0\kerning0
"anotherValue"\cf0 \expnd0\expndtw0\kerning0
]\
\cf15 \expnd0\expndtw0\kerning0
let\cf0 \expnd0\expndtw0\kerning0
 theJSONData = \cf17 \expnd0\expndtw0\kerning0
NSJSONSerialization\cf0 \expnd0\expndtw0\kerning0
.dataWithJSONObject(\
  dictionary ,\
  options: \cf17 \expnd0\expndtw0\kerning0
NSJSONWritingOptions\cf0 \expnd0\expndtw0\kerning0
(\cf24 \expnd0\expndtw0\kerning0
0\cf0 \expnd0\expndtw0\kerning0
),\
  error: \cf15 \expnd0\expndtw0\kerning0
nil\cf0 \expnd0\expndtw0\kerning0
)\
\cf15 \expnd0\expndtw0\kerning0
let\cf0 \expnd0\expndtw0\kerning0
 theJSONText = \cf17 \expnd0\expndtw0\kerning0
NSString\cf0 \expnd0\expndtw0\kerning0
(data: theJSONData!,\
  encoding: \cf17 \expnd0\expndtw0\kerning0
NSASCIIStringEncoding\cf0 \expnd0\expndtw0\kerning0
)\
println(\cf24 \expnd0\expndtw0\kerning0
"JSON string = \\(theJSONText!)"\cf0 \expnd0\expndtw0\kerning0
)\cf19 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl264\slmult1

\f13\fs24 \cf0 \cb1 \expnd0\expndtw0\kerning0
7.
\f0\fs28 \cf25 \expnd0\expndtw0\kerning0
the 
\f12\fs20 \cf18 \expnd0\expndtw0\kerning0
NSJSONSerialization
\f0\fs28 \cf25 \expnd0\expndtw0\kerning0
 class to convert JSON to Foundation objects and convert Foundation objects to JSON.\
8. NSJSONSerialization :{\field{\*\fldinst{HYPERLINK "https://developer.apple.com/library/ios/documentation/Foundation/Reference/NSJSONSerialization_Class/"}}{\fldrslt \expnd0\expndtw0\kerning0
https://developer.apple.com/library/ios/documentation/Foundation/Reference/NSJSONSerialization_Class/}}
\f13\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl264\slmult1

\f3\b\fs28 \cf0 \expnd0\expndtw0\kerning0
\ul \
Difference between iPhone 6 and 6s\

\b0 \ulnone 1.Screen Display-
\f9\fs24 \cf26 \expnd0\expndtw0\kerning0
They both measure 4.7in and have a resolution of 750 x 1334, but the major update here is 3D Touch(6s).\
2.use of a stronger 7,000 series aluminium to reduce the risk of the phone bending when sat on in your pocket\
3.Camera-2MP it has a larger sensor than the 8MP iPhone 6..front camera-mproved, up from just 1.2MP on the iPhone 6 to a much more respectable 5MP on the iPhone 6s.
\f13\fs32 \cf13 \expnd0\expndtw0\kerning0
i
\f3\fs26 Phone 6s also comes with retina flash that makes photos three times brighter.
\f9\fs24 \cf26 \expnd0\expndtw0\kerning0
\
4.storage,Battery capacity-no changes in the 6s,has same specificatios of iphone6.\
5.
\f3\fs26 \cf13 \expnd0\expndtw0\kerning0
iPhone 6 is only available in silver and space grey, you have more color options with iPhone 6s as it adds gold and rose gold in the list.
\f9\fs24 \cf26 \expnd0\expndtw0\kerning0
\

\f3\fs26 \cf0 \expnd0\expndtw0\kerning0
6.iphone 6 uses-A8 chip architecture with M8 coprocessor,where iPhone 6s uses-A9 chip architecture with M9 coprocessor.\
7.6s\'97
\f14\fs30 \cf27 \expnd0\expndtw0\kerning0
supports wider LTE\'a0Bands, and has a faster Wifi . It comes with iOS 9 pre installed and Apple has launched a new app in the Google play store to allow easy migration of Android users to iPhone\
8.iphone 6 has Dual core 1.4GHz where 6s has  2.2 GHz.\
9.for more:{\field{\*\fldinst{HYPERLINK "http://www.ipos7.com/apple-iphone-6-vs-apple-iphone-6s-vs-apple-iphone-6-plus-vs-apple-iphone-6s-plus-vs-apple-iphone-7/"}}{\fldrslt http://www.ipos7.com/apple-iphone-6-vs-apple-iphone-6s-vs-apple-iphone-6-plus-vs-apple-iphone-6s-plus-vs-apple-iphone-7/}}\
\

\b \ul Guidelines for apple\'97app store and human interface\ulnone \

\b0 1.
\fs26 for app store guidelines\'97{\field{\*\fldinst{HYPERLINK "https://developer.apple.com/app-store/review/guidelines/"}}{\fldrslt https://developer.apple.com/app-store/review/guidelines/}}\
2.IOS Human Interface guidelines\'97-{\field{\*\fldinst{HYPERLINK "https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/StartingStopping.html#//apple_ref/doc/uid/TP40006556-CH52-SW1"}}{\fldrslt https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/StartingStopping.html#//apple_ref/doc/uid/TP40006556-CH52-SW1}}\
\

\b \ul Passing data between view controller.\

\b0 \ulnone 1.there is a three..in appdelegate( didFinishLaunching..)\'97\'97>ve to crt\'85this is due to lingering connection of IBOutlets\'85(means having unconnected more outlets..)\
2.while coding\'85keep eye on class creation\'85variables calling\'85variable assigning..\
3.error on didselectrow function:
\fs30 \
4.error on view did load function().\
5.check once the images are in crt format while b4r displaying\
6. 
\f12\fs28 \cf28 \kerning1\expnd0\expndtw0 \CocoaLigature0 %@ \'97> 
\fs24 \cf0 used to display the image name which is currently called.
\fs28 \cf28  
\f14\fs30 \cf27 \expnd0\expndtw0\kerning0
\CocoaLigature1 \

\f3\b\fs24 \cf0 \expnd0\expndtw0\kerning0
\ul \

\fs26 KVO- Key value observation:
\fs24 \

\b0\fs28 \expnd0\expndtw0\kerning0
\ulnone 1.\cf20 \cb21 \expnd0\expndtw0\kerning0
to track down changes on single properties or collections, such as arrays.\
2.
\i \expnd0\expndtw0\kerning0
Key-value coding is a mechanism for accessing an object\'92s properties indirectly, using strings to identify properties, rather than through invocation of an accessor method or accessing them directly through instance variables.\
 e.g.:
\i0 \cf11 \cb29 \expnd0\expndtw0\kerning0
[self setValue:@"John" forKey:@"firstname"];\
\cf0 \cb1 \expnd0\expndtw0\kerning0
3.\cf20 \cb21 \expnd0\expndtw0\kerning0
instead of directly setting the value  to the property or use the setter method  of the property\
4.
\b \cf14 \cb1 \expnd0\expndtw0\kerning0
No
\b0 \expnd0\expndtw0\kerning0
, currently there is no builtin value observation system for arbitrary Swift objects.\
\
example:{\field{\*\fldinst{HYPERLINK "http://www.appcoda.com/understanding-key-value-observing-coding/"}}{\fldrslt http://www.appcoda.com/understanding-key-value-observing-coding/}}\
5.\cf20 \cb21 \expnd0\expndtw0\kerning0
By default, the system sends a notification every time a property gets changed when you observe using KVO.\
\'97>if v don\'92t need notification everytym\'85ve to set the 
\i \expnd0\expndtw0\kerning0
automaticallyNotifiesObserverForKey:
\i0 \expnd0\expndtw0\kerning0
 class method.\'97which controls the notifications.\
6. Arrays is a special case in Key-Value Coding and Key-Value Observing, as there are extra actions that should be performed.that arrays are not KVC compliant, therefore dealing with them is not as simple as with single properties.\
\

\b \expnd0\expndtw0\kerning0
\ul ANIMATIONS IN SWIFT:\ulnone \

\fs26 1.
\f11\b0 \cf26 \cb1 \expnd0\expndtw0\kerning0
Core Animation is a graphics rendering and animation infrastructure available on both iOS and OS X that you use to animate the views and other visual elements of your app.
\f3\b \cf20 \cb21 \expnd0\expndtw0\kerning0
\

\b0 \cf0 \cb1 \expnd0\expndtw0\kerning0
2.to add any object to the animation..first ve to declare lyk dis..\
\pard\pardeftab720

\f8 \cf0 \cb21 \expnd0\expndtw0\kerning0
let coloredSquare = \cf30 \cb1 \expnd0\expndtw0\kerning0
UIView\cf0 \cb21 \expnd0\expndtw0\kerning0
()\
3.
\f15 \cf31 \cb32 \expnd0\expndtw0\kerning0
We\'92ll use the 
\f8 \expnd0\expndtw0\kerning0
arc4random_uniform
\f15 \expnd0\expndtw0\kerning0
 function which returns a whole number between zero and the number you pass into the function. For example 
\f8 \expnd0\expndtw0\kerning0
arc4random_uniform(4)
\f15 \expnd0\expndtw0\kerning0
will randomly return either 
\f8 \expnd0\expndtw0\kerning0
0
\f15 \expnd0\expndtw0\kerning0
, 
\f8 \expnd0\expndtw0\kerning0
1
\f15 \expnd0\expndtw0\kerning0
, 
\f8 \expnd0\expndtw0\kerning0
2
\f15 \expnd0\expndtw0\kerning0
, 
\f8 \expnd0\expndtw0\kerning0
3
\f15 \expnd0\expndtw0\kerning0
, or 
\f8 \expnd0\expndtw0\kerning0
4
\f15 \expnd0\expndtw0\kerning0
 each time it\'92s called.\
4.we\'92ll use 
\f8 \expnd0\expndtw0\kerning0
animateKeyframesWithDuration
\f15 \expnd0\expndtw0\kerning0
 to define the rotation in smaller parts\
\
5.fa replacing or translating a object or a view to another position..\'97>
\f12\fs28 \cf33 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 self\cf0 .\cf34 name\cf0 .\cf35 transform\cf0  = \cf36 CGAffineTransformMakeTranslation\
\

\f2\b \cf0 \ul UIDocumentInteractionController\

\f12\b0\fs26 \ulnone 1.
\f0\fs28 \cf25 \expnd0\expndtw0\kerning0
\CocoaLigature1 provides in-app support for managing user interactions with files in the local system.\
2.this method used to previewing,opemning,copying any type of document in iPhone..and also in different platform..\
\

\b \ul DatePicker\

\b0 \ulnone 1.NSDateFormatter() method gets the date in date format..\
2.stringFromDate() method converts the date into string format.\
3.DateFromString() methods converts the given string to date.\
4.string to date conversion oly shows the date and time with timezone\'85but if we give the string in the form of milliseconds..by using NStimeinterval..we can display the date in our expected form..\
\

\b \ul AUTOLAYOUT\

\b0 \ulnone 1.Leading - Trailing\
2.to the top space - to the bottom guide\
3.vertically centred - horizontally centred \
4.ctrl + drag\'97> 1.to the ryt/left 2.inside the element 3.to the another element.\
\
<<<constraints and auto layout can be set by code also>>> It follows the 6 styles of code\
	1.NSLayoutConstraint Style\
	2. 
\f11\fs26 \cf14 \expnd0\expndtw0\kerning0
Mixed style (
\f12 \cb16 \expnd0\expndtw0\kerning0
NSLayoutConstraint
\f11 \cb1 \expnd0\expndtw0\kerning0
 + Visual Format Language)\
	3. Visual Format Language style\
	4.
\f12 \cb16 \expnd0\expndtw0\kerning0
UIViewAutoresizing
\f11 \cb1 \expnd0\expndtw0\kerning0
 style\
	5. Subclassing style\
	6.
\f12 \cb16 \expnd0\expndtw0\kerning0
NSLayoutAnchor
\f11 \cb1 \expnd0\expndtw0\kerning0
 style (requires iOS 9+)\
5.constraints by program is used when changes made at the run time..instead of UI (story board)\
\

\b\fs28 \expnd0\expndtw0\kerning0
\ul XML PARSING\

\b0\fs24 \ulnone 1.
\f10\fs34 \cf20 \cb21 \expnd0\expndtw0\kerning0
parsing XML data, iOS offers the 
\i \expnd0\expndtw0\kerning0
NSXMLParser
\i0 \expnd0\expndtw0\kerning0
 class, which takes charge of doing all the hard work\
2. easy understand: {\field{\*\fldinst{HYPERLINK "http://dubinski.org/wpis/easy-xml-parsing-in-swift/"}}{\fldrslt \expnd0\expndtw0\kerning0
http://dubinski.org/wpis/easy-xml-parsing-in-swift/}}\
3.{\field{\*\fldinst{HYPERLINK "http://help.adobe.com/en_US/ActionScript/3.0_ProgrammingAS3/WS5b3ccc516d4fbf351e63e3d118a9b90204-7e72.html"}}{\fldrslt \expnd0\expndtw0\kerning0
http://help.adobe.com/en_US/ActionScript/3.0_ProgrammingAS3/WS5b3ccc516d4fbf351e63e3d118a9b90204-7e72.html}}\
4. to parse delegate\'97>use NSXMLParserDelegate\
5.XML parsing main class is NSXMLParse,which calls parser delegates\
\
work flow\
1.first calls the parse() in viewdidload()\
2.thn didstartelement\'85.thn if (condition becomes true)it goes to the parse func block\
\

\b \expnd0\expndtw0\kerning0
\ul ACCORDIAN\

\b0\fs28 \ulnone 1.when a cell is tapped\'97>it vil show the dropdown list containing the list of options.\
2.It is also known as cell expandable or cell collasiable.\
3.cell expansion or accordion can also set in static or dynamic cells of tableview\
4.tapping vll be set in \'93didselect function\'94.\
5.dynamically contents of the cell can also given in a separate swift.\
6.for expanding the cell..defining its height is must(height forcell func)\
\

\b \ul PAYMENT GATEWAY\

\b0 \ulnone 1. \'97>stripe(newer)   \'97>paypal   **payment gateway vary depends on the country..\
2.if we purchase a physical good or service with in a app..v ve to use credit card payment gateways(paypal or stripe)\
3.for inapp purchase (lyk upgrade levels  or gaming levels ) made purchase same through paypal or stripe(don\'92t know acutely ve to check\'85)\
\

\b \ul steps for using paypal integration in apps: {\field{\*\fldinst{HYPERLINK "https://developer.paypal.com/docs/classic/mobile/ht_mpl-itemPayment-iOS/"}}{\fldrslt https://developer.paypal.com/docs/classic/mobile/ht_mpl-itemPayment-iOS/}}\

\b0 \ulnone 1.Register into paypal .com \
2.steps  to add paypal to the apps: {\field{\*\fldinst{HYPERLINK "https://github.com/paypal/PayPal-iOS-SDK/blob/master/README.md"}}{\fldrslt https://github.com/paypal/PayPal-iOS-SDK/blob/master/README.md}}\
\
\
 \
\pard\tx674\pardeftab674\pardirnatural

\b \cf20 \ul E-Clincher\

\b0 \ulnone 1.Facebook\'97In settings ->save changes button didn\'92t work fine\
2.changes in new follower  Jamballa - feed\
3.In inbox \'97at the comment end\'97complete will be shown as \'93mark as completed\'94.\
4.at feed \'97message change into D.M\
5.while tapping following \'97pop up always shows no longer following\
6.add photo tag missing in reply comment.\
7.in reply \'971.returning to inbox 2.missing done option(site) 3. missing successful popup(site).\
8.in direct message \'97retweet changes into \'93send message\'94 (mtnview84)\
9.text collide at the mention category (completed and reply)\
\pard\pardeftab720

\f11\fs34 \cf14 \cb1 \expnd0\expndtw0\kerning0
\
18-mar\
\pard\pardeftab720

\fs26 \cf14 \expnd0\expndtw0\kerning0
1.tapping on view profile -didnt show user profile.\
2.selecting feeds to display in settings doesn\'92t work \'97 always shows all the feeds(unchecked one too)\
3.In account settings \'97 save and cancel functionality doesn\'92t work fine\
4.
\fs34 \expnd0\expndtw0\kerning0
\

\f2\b\fs28 \cf0 \kerning1\expnd0\expndtw0 \ul \CocoaLigature0 \
\pard\pardeftab720\sl320

\f3 \cf0 \expnd0\expndtw0\kerning0
\ulc0 \CocoaLigature1 Twitter integration\
\

\b0 \ulnone \'97>twitter share on page \'97>uses SLcomposeViewController\
\'97> login into twitter  \'97>1.by parse.framework 2.fabric app 3.Oauth \
\pard\pardeftab720\sl264\slmult1
\cf0 \expnd0\expndtw0\kerning0
1.parse framework is changed into parse server\'85it is unable to install coz i can\'92t understand\
2.OAuth uses cocoa pods\'85 for installation.\
3.fabric work.\
\'97>open an account in fabric\
\'97>download  it  in your mac\
\'97>add run path to that build phase\
\'97>copy the text in the fabric into the run path\
\'97>add the frameworks to the project..\
\'97>add that code which have been suggested.\

\b \ul Facebook Integration:\

\b0 \ulnone 1.Facebook uses Single-sign on technology.\
2. go to Facebook.developer.com and register for the new app name\'85follow the mentioned steps.\
3.facebook news feed without storyboard:{\field{\*\fldinst{HYPERLINK "https://www.youtube.com/watch?v=NJxb7EKXF3U"}}{\fldrslt https://www.youtube.com/watch?v=NJxb7EKXF3U}}\
4. declare read permissions method\'85to get info from the user account.\
4.FBSDKAccessToken()\'97> to check wheather the current session status\
5.
\b \ul for accessing the objects in another \

\b0 \ulnone   \'97>ve to create object for the view controller..lyk dis\
 let obj =  view controller name()\
 obj.ojectname(lbl,textview) = \'93 some text\'94\

\b 6. fatal error\'97 nil value can b wrapping up 
\b0  \'97>this is ve to check\
7. Facebook latest version using is V4.10.1\
\

\b \ul  TO GET D-U-N-S NUMBER\

\b0 \ulnone 1.
\f6\fs24 \expnd0\expndtw0\kerning0
Usually it takes up to 30 days to get the number if you apply through the free route, however if you pay, they\'92ll do it in less than 5 days.
\f3\fs28 \expnd0\expndtw0\kerning0
\
2.
\f11\fs24 \cf37 \expnd0\expndtw0\kerning0
A 
\b \expnd0\expndtw0\kerning0
DUNS number
\b0 \expnd0\expndtw0\kerning0
 is a unique nine-character number used to identify your organization\
\

\b \expnd0\expndtw0\kerning0
\ul MapKit Framework\

\b0 \expnd0\expndtw0\kerning0
\ulnone 1.
\f0\fs32 \cf38 \expnd0\expndtw0\kerning0
Build a custom map for your iOS app using 3D buildings, indoor floor plans and more.
\f3\fs28 \cf0 \expnd0\expndtw0\kerning0
\
2.Specify the particular area by defining the latitude and longitude and the helper method.\
helper method\'97>it consists of centerMapOnLocation method,coordinateRegion and setRegion methods.\
3.CLPlacemark class\'97>\
4. two important things in mapkit is 1.latitute and longitude values 2. the span  \'97>it means  map\'92s zoom in and zoom out.\
5.MKPointAnnotation() ->is used to set the annotations (marking point of the location)  \'97>includes titles and subtitles to the location.\
\pard\pardeftab720\sl264\slmult1

\f6\fs24 \cf0 \expnd0\expndtw0\kerning0
6.
\f3 \expnd0\expndtw0\kerning0
To 
\fs28 \expnd0\expndtw0\kerning0
 locate the current location and to update the user location \'97>import coreLoaction,CLLocationManager()  class is used. and also the delegate should be set.\
7.In order to track current location \'97>ve to add a row to info.plist(NSLocationWhenUseUsageDescription)
\f6\fs24 \expnd0\expndtw0\kerning0
\
8. location tracking \'97> {\field{\*\fldinst{HYPERLINK "http://www.johnmullins.co/blog/2014/08/14/location-tracker-with-maps/"}}{\fldrslt \expnd0\expndtw0\kerning0
http://www.johnmullins.co/blog/2014/08/14/location-tracker-with-maps/}}\
\
\
\pard\pardeftab720\sl264\slmult1

\f0\b\fs28 \cf0 \expnd0\expndtw0\kerning0
\ul difference between mapkit and googlemaps\
\pard\pardeftab720\sl264\slmult1

\f6\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
1.
\f0\fs28 \cf13 \expnd0\expndtw0\kerning0
that Apple's MapKit is easier to implement and offers better integration into iOS\
2.unlike MapKit, the current Google Maps SDK doesn\'92t allow for overlays and gradient polylines\
3. google maps provides more zooming level rather than Mapkit.\
\
\
\pard\pardeftab720\sl264\slmult1

\b \cf13 \ul core animation\
\pard\pardeftab720\sl520

\f16\b0 \cf39 \expnd0\expndtw0\kerning0
\ulnone The 
\f8 \expnd0\expndtw0\kerning0
CALayer
\f16 \expnd0\expndtw0\kerning0
 class has many specialized subclasses, such as 
\f8 \expnd0\expndtw0\kerning0
CAScrollLayer
\f16 \expnd0\expndtw0\kerning0
,
\f8 \expnd0\expndtw0\kerning0
CAEmitterLayer
\f16 \expnd0\expndtw0\kerning0
, 
\f8 \expnd0\expndtw0\kerning0
CAGradientLayer
\f16 \expnd0\expndtw0\kerning0
, 
\f8 \expnd0\expndtw0\kerning0
CAReplicatorLayer
\f16 \expnd0\expndtw0\kerning0
, 
\f8 \expnd0\expndtw0\kerning0
CAEAGLLayer
\f16 \expnd0\expndtw0\kerning0
,
\f8 \expnd0\expndtw0\kerning0
CAShapeLayer
\f16 \expnd0\expndtw0\kerning0
, 
\f8 \expnd0\expndtw0\kerning0
CATextLayer
\f16 \expnd0\expndtw0\kerning0
, 
\f8 \expnd0\expndtw0\kerning0
CATransformLayer
\f16 \expnd0\expndtw0\kerning0
.
\f0\b \cf13 \expnd0\expndtw0\kerning0
\ul \
\pard\pardeftab720\sl264\slmult1
\cf13 \expnd0\expndtw0\kerning0
\
UISearchBar along with UITableview\
\pard\pardeftab720\sl264\slmult1

\b0 \cf13 \ulnone 1.ve to use search bar and display controller on the UI\
2.its delegates and datasources will get up hooked automatically.\
3.
\b \expnd0\expndtw0\kerning0
but v ve to connect search bar to the VC and then set an outlet between search display controller, and search bar
\b0 \expnd0\expndtw0\kerning0
.\
\
\pard\pardeftab720\sl264\slmult1

\b \cf13 \ul different types of XML parser\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://developer.apple.com/iphone/library/documentation/Cocoa/Reference/Foundation/Classes/NSXMLParser_Class/Reference/Reference.html"}}{\fldrslt 
\b0\fs32 \cf40 \expnd0\expndtw0\kerning0
\ulc40 NSXMLParser}}
\b0\fs32 \cf0 \expnd0\expndtw0\kerning0
\ulnone  
\fs26 is a SAX parser included by default with the iPhone SDK. It\'92s written in Objective-C and is quite straightforward to use, but perhaps not quite as easy as the DOM model.\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://xmlsoft.org/"}}{\fldrslt \cf40 \expnd0\expndtw0\kerning0
\ul \ulc40 libxml2}} is an Open Source library that is included by default with the iPhone SDK. It is a C-based API, so is a bit more work to use than NSXML. The library supports both DOM and SAX processing. The libxml2 SAX processor is especially cool, as it has a unique feature of being able to parse the data as it\'92s being read. For example, you could be reading a large XML document from the network and displaying data that you\'92re reading for it to the user while you\'92re still downloading.\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://www.tbxml.co.uk/"}}{\fldrslt \cf40 \expnd0\expndtw0\kerning0
\ul \ulc40 TBXML}} is a lightweight DOM XML parser designed to be as quick as possible while consuming few memory resources. It saves time by not performing validation, not supporting XPath, and by being read-only \'96 i.e. you can read XML with it, but you can\'92t then modify the XML and write it back out again.\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "https://github.com/TouchCode/TouchXML"}}{\fldrslt \cf40 \expnd0\expndtw0\kerning0
\ul \ulc40 TouchXML}} is an NSXML style DOM XML parser for the iPhone. Like TBXML, it is also read-only, but unlike TBXML it does support XPath.\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/kissxml"}}{\fldrslt \cf40 \expnd0\expndtw0\kerning0
\ul \ulc40 KissXML}} is another NSSXML style DOM XML parser for the iPhone, actually based on TouchXML. The main difference is KissXML also supports editing and writing XML as well as reading.\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://www.grinninglizard.com/tinyxml/"}}{\fldrslt \cf40 \expnd0\expndtw0\kerning0
\ul \ulc40 TinyXML}} is a small C-based DOM XML parser that consists of just four C files and two headers. It supports both reading and writing XML documents, but it does not support XPath on its own. However, you can use a related library \'96 TinyXPath \'96 for that.\
\pard\pardeftab720
{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/gdata-objectivec-client/source/browse/trunk/Source/XMLSupport/"}}{\fldrslt \cf40 \expnd0\expndtw0\kerning0
\ul \ulc40 GDataXML}} is yet another NSXML style DOM XML parser for the iPhone, developed by Google as part of their Objective-C client library. Consisting of just a M file and a header, it supports both reading and writing XML documents and XPath queries.\
\pard\pardeftab720\sl517\sa200
\cf0 \
\
\
15 best lessons of life\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420
\ls1\ilvl0
\f4\fs30 \cf13 \kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
"Friends forever" is a myth. A joke. With time,many will leave you and you will leave many.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
True friends are few,maybe one or two.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3.	}\expnd0\expndtw0\kerning0
You'll be alone in the most difficult times of your life. These times will make you wise,mature and fearless.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4.	}\expnd0\expndtw0\kerning0
Nobody will help you. You gotta help yourself.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5.	}\expnd0\expndtw0\kerning0
Your health and career will only thank you,reward you in future; And not people.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	6.	}\expnd0\expndtw0\kerning0
You will meet a lot of fake people; learn to identify such people and maintain a healthy distance.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	7.	}\expnd0\expndtw0\kerning0
You will be pulled down out of jealously; don't get surprised. Its normal.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	8.	}\expnd0\expndtw0\kerning0
You'll be cheated,betrayed by your close ones, don't get surprised. Smile. And move on.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	9.	}\expnd0\expndtw0\kerning0
People will treat you according to their need and greed.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	10.	}\expnd0\expndtw0\kerning0
It is good to be generous,benign and magnanimous. But there's a limit. Or you'll be taken as granted.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	11.	}\expnd0\expndtw0\kerning0
Grab every opportunity you can. Time flies and guilt is the worst feeling I tell you.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	12.	}\expnd0\expndtw0\kerning0
To achieve anything in life,you gotta work your ass off. You gotta work real hard. Nothing comes easy.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	13.	}\expnd0\expndtw0\kerning0
Be pragmatic while taking any decision. Don't let your emotions influence you.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	14.	}\expnd0\expndtw0\kerning0
Every difficult phase in life will fetch you a lesson. Don't get disheartened. Draw conclusion out of it.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	15.	}\expnd0\expndtw0\kerning0
And last but not the least,never underestimate yourself. You have much more potential,ability,talent than you think. 
\i \expnd0\expndtw0\kerning0
Carpe Diem
\i0 \expnd0\expndtw0\kerning0
 fella.\
\pard\pardeftab720\sl517\sa200

\f0\fs26 \cf0 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl517\sa200

\b\fs30 \cf0 \expnd0\expndtw0\kerning0
\ul LinkedIn Integration using swift\
\pard\pardeftab720\sl288\slmult1

\b0\fs24 \cf0 \ulnone 1.here i am using OAuth2.0 ,its the default integration app provided by linkedin instead of any other third party iOS sdks.\
2.First step to create an account in linked developer site ,to register our application by giving desired details and the bundle identifier.\
3.site vil provide you the app id,client id,client secret key..\
4. the main purpose of these id and key is to get the authorisation from the server.\
-> for getting authorisation code some variables are mandatory\
> response type >redirestURL > state >scope\
5.
\b IMP NOTE :
\b0  v must specify the redirectURI in developer site which one v used in the code for the call back.\
6.so far ve loaded the login page in web view\'85after dat  ve to make GET and POST request from the server..\
7.next POST request preparation and it also has some mandatory variables to be mentioned.\
>grant_type  >client id >client secret >code >redirectURI\
8.POST parameters can\'92t be sent as string and as NSData\
\
Notepad apps\
>EverNote : https://itunes.apple.com/in/app/evernote/id406056744?mt=12\
> Microsoft OneNote : https://itunes.apple.com/in/app/microsoft-onenote/id784801555?mt=12\
>simplenote : https://itunes.apple.com/in/app/simplenote/id692867256?mt=12\
>google keep : https://itunes.apple.com/in/app/notes-for-google-keep/id1001573748?mt=12 (paid)\
>Mininote :https://itunes.apple.com/in/app/mininote/id492486856?mt=12\
>quip :https://itunes.apple.com/in/app/quip-docs-chat-spreadsheets/id1003160018?mt=12\
>quickNotes : https://itunes.apple.com/in/app/quick-note/id414848186?mt=12\
>Tab Notes : https://itunes.apple.com/in/app/tab-notes-free/id410479438?mt=12\
>NoteLedge : https://itunes.apple.com/in/app/noteledge-take-notes-sketch/id728109273?mt=12\
\

\b \ul \
SQLITE AND COREDATA\

\b0 \ulnone 1.
\f11\fs30 \cf41 \expnd0\expndtw0\kerning0
There is a huge difference between these two. 
\f12\fs26 \cb42 \expnd0\expndtw0\kerning0
SQLLite
\f11\fs30 \cb1 \expnd0\expndtw0\kerning0
 is a database itself like we have 
\f12\fs26 \cb42 \expnd0\expndtw0\kerning0
MS SQL Server
\f11\fs30 \cb1 \expnd0\expndtw0\kerning0
. But 
\f12\fs26 \cb42 \expnd0\expndtw0\kerning0
CoreData
\f11\fs30 \cb1 \expnd0\expndtw0\kerning0
 is an 
\f12\fs26 \cb42 \expnd0\expndtw0\kerning0
ORM
\f11\fs30 \cb1 \expnd0\expndtw0\kerning0
 (Object Relational Model) which creates a 
\f12\fs26 \cb42 \expnd0\expndtw0\kerning0
layer
\f11\fs30 \cb1 \expnd0\expndtw0\kerning0
 between the 
\f12\fs26 \cb42 \expnd0\expndtw0\kerning0
database
\f11\fs30 \cb1 \expnd0\expndtw0\kerning0
 and the 
\f12\fs26 \cb42 \expnd0\expndtw0\kerning0
UI
\f11\fs30 \cb1 \expnd0\expndtw0\kerning0
. It 
\f12\fs26 \cb42 \expnd0\expndtw0\kerning0
speeds-up
\f11\fs30 \cb1 \expnd0\expndtw0\kerning0
 the 
\f12\fs26 \cb42 \expnd0\expndtw0\kerning0
process
\f11\fs30 \cb1 \expnd0\expndtw0\kerning0
 of interaction as we dont have to 
\f12\fs26 \cb42 \expnd0\expndtw0\kerning0
write queries
\f11\fs30 \cb1 \expnd0\expndtw0\kerning0
, just work with the ORM and let ORM handles the backend. For 
\f12\fs26 \cb42 \expnd0\expndtw0\kerning0
save or retrieval of large data
\f11\fs30 \cb1 \expnd0\expndtw0\kerning0
, I recommend to use Core Data because of its abilities to handle the less processing speed of device. Hope this helps.\
\

\b \expnd0\expndtw0\kerning0
\ul working with sqlite
\b0 \expnd0\expndtw0\kerning0
\ulnone \
2.SQLite is relational database..becoz it stores and manipulate the data in the form of table.\
3.To use in our app\'85to follow the steps\
> first create the DB and table in mozilla firefox and drag it to the project repository.\
>add a link library file in the build phase..(\'93libsqlite3.0.tbd\'94)\
> add a third party (here i used FMDB..)and once check dat file is added in build phase and the db too.\
>
\f3\fs28 \cf0 \cb43 \expnd0\expndtw0\kerning0
Add compiler flag -fno-objc-arc to\'a0FMDB library files as following.\
>have to add the DB name in the didfinishfunction\
>connecting methods are called in the \'93util swift\'94 file.\
>Model Manager .swift is the \'93singleton class\'94 created for the third party FMDB file\'85which contains path for the DB.\
>And necessary code are entered in the view controller swift files.\
\pard\pardeftab720\sl480

\f0\fs24 \cf44 \expnd0\expndtw0\kerning0
\
\
\pard\pardeftab720\sl520

\f9\b\fs30 \cf22 \cb1 \expnd0\expndtw0\kerning0
\ul \ulc22 Working with  local notifications\

\b0 \ulnone >in order to send local notifications in our app, we first need to request permission,it can be accessed by  using the class  \'93
\f12\fs28 \cf0 \cb45 \expnd0\expndtw0\kerning0
UIUserNotificationSettings\'94
\f9\fs30 \cf22 \cb1 \expnd0\expndtw0\kerning0
\
>
\f12\fs28 \cf0 \cb45 \expnd0\expndtw0\kerning0
registerUserNotificationSettings()
\f9\fs30 \cf22 \cb1 \expnd0\expndtw0\kerning0
 method to tell iOS what you want, and it will then prompt the user if needed\
>to schedule the notification\'97>means to configure all the data needed to schedule and call \'93
\f12\fs28 \cf0 \cb45 \expnd0\expndtw0\kerning0
scheduleLocalNotification()\'94\
>the following properties need to defines while schedule local notifications.\
\'97>fireDate
\f9\fs30 \cf22 \cb1 \expnd0\expndtw0\kerning0
 decides when the notification should be shown\
\'97>
\f12\fs28 \cf0 \cb45 \expnd0\expndtw0\kerning0
alertBody
\f9\fs30 \cf22 \cb1 \expnd0\expndtw0\kerning0
 is a string containing the text to show to users\
\'97>
\f12\fs28 \cf0 \cb45 \expnd0\expndtw0\kerning0
alertAction
\f9\fs30 \cf22 \cb1 \expnd0\expndtw0\kerning0
 is a string shown under your message that completes the sentence,\
\'97>
\f12\fs28 \cf0 \cb45 \expnd0\expndtw0\kerning0
soundName
\f9\fs30 \cf22 \cb1 \expnd0\expndtw0\kerning0
 we'll be using the default alert sound, but it's not hard to specify your own\
\'97>u
\f12\fs28 \cf0 \cb45 \expnd0\expndtw0\kerning0
serInfo
\f9\fs30 \cf22 \cb1 \expnd0\expndtw0\kerning0
 is a dictionary of keys and values that you can provide.\
\
\

\b \ul Simple Notepad with local notification:\

\b0 \ulnone Description :A simple app to take notes and to store in the local DB.\
 it having two view controllers ,one to show the note title and a button to view the whole enter note.Another view controller is a page to just to type the note and to save ion the DB.\
And there is also a local notification pop up once in a 10 min \'85ask to update the the note for for the hour.\
\
things to do\
>first vc la entered note name in label,two buttons one to view the whole and other to del the note.\
,along with date and time of the note taken\
>if v clickd the add button in navigate..it vl go to sec vc..ask to enter the detail note to be saved in the cordata.\
>And also use the local notification for every 10 sec\'85alert ask to make a note.\
\

\b \ul GITHUB\

\b0 \ulnone >Github is a cloud storage ..used to store,modify and to share our projects ,files..etc\
>it can be done by command line(terminal)\
steps:\
To change the path : sudo xcode-select -switch /Applications/Xcode2.app/Contents/Developer\
1.change the path where the folder location\'85(e.g. cd desktop, cd folder name)\
2.to clone the cloud project  :- git clone \'93repository link\'94\
3.to add the files into the cloud :- git add -A (all files) or git add <file name> (particular file)\
4.to check the status :- git status\
5. to commit :- git commit -m \'93comment about file\'94\
6. to push :- git push\
\
}